{"version":3,"sources":["addons/sticky.js"],"names":["addon","component","jQuery","UIkit","define","amd","$","UI","scroller","sticked","length","newTop","scrollTop","$win","documentHeight","$doc","height","dwh","extra","i","element","is","animate","sticky","check","options","top","outerHeight","bottom","currentTop","css","position","width","getWidthFrom","left","wrapper","offset","init","addClass","clsinit","location","hash","target","$target","setTimeout","maxoffset","stickyOffset","stickyHeight","stickyMaxOffset","window","scrollTo","clsactive","animation","reset","defaults","media","this","attr","Math","ceil","random","float","margin","wrap","parent","force","finalize","removeClass","join","bind","support","one","end","innerWidth","matchMedia","matches","elementTop","etse","push","update","on","Utils","debounce","ready","context","each","$ele","data","fn","uksticky"],"mappings":"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","file":"addons/sticky.js","sourcesContent":["/*! UIkit 2.9.0 | http://www.getuikit.com | (c) 2014 YOOtheme | MIT License */\n\n(function(addon) {\n\n    var component;\n\n    if (jQuery && jQuery.UIkit) {\n        component = addon(jQuery, jQuery.UIkit);\n    }\n\n    if (typeof define == \"function\" && define.amd) {\n        define(\"uikit-sticky\", [\"uikit\"], function(){\n            return component || addon(jQuery, jQuery.UIkit);\n        });\n    }\n\n})(function($, UI){\n\n    var $win         = UI.$win,\n        $doc         = UI.$doc,\n        sticked      = [];\n\n    UI.component('sticky', {\n\n        defaults: {\n            top          : 0,\n            bottom       : 0,\n            animation    : '',\n            clsinit      : 'uk-sticky-init',\n            clsactive    : 'uk-active',\n            getWidthFrom : '',\n            media        : false,\n            target       : false\n        },\n\n        init: function() {\n\n            var stickyId = this.element.attr('id') || (\"s\"+Math.ceil(Math.random()*10000)),\n                wrapper  = $('<div class=\"uk-sticky-placeholder\"></div>').css({\n                        'height' : this.element.css('position') != 'absolute' ? this.element.outerHeight() : '',\n                        'float'  : this.element.css(\"float\") != \"none\" ? this.element.css(\"float\") : '',\n                        'margin' : this.element.css(\"margin\")\n                });\n\n            wrapper = this.element.css('margin', 0).wrap(wrapper).parent();\n\n            this.sticky = {\n                options      : this.options,\n                element      : this.element,\n                currentTop   : null,\n                wrapper      : wrapper,\n                init         : false,\n                getWidthFrom : this.options.getWidthFrom || wrapper,\n                reset        : function(force) {\n\n                    var finalize = function() {\n                        this.element.css({\"position\":\"\", \"top\":\"\", \"width\":\"\", \"left\":\"\", \"margin\":\"0\"});\n                        this.element.removeClass([this.options.animation, 'uk-animation-reverse', this.options.clsactive].join(' '));\n\n                        this.currentTop = null;\n                        this.animate    = false;\n                    }.bind(this);\n\n\n                    if (!force && this.options.animation && UI.support.animation) {\n\n                        this.animate = true;\n\n                        this.element.removeClass(this.options.animation).one(UI.support.animation.end, function(){\n                            finalize();\n                        }).width(); // force redraw\n\n                        this.element.addClass(this.options.animation+' '+'uk-animation-reverse');\n                    } else {\n                        finalize();\n                    }\n                },\n                check: function() {\n\n                    if (this.options.media) {\n\n                        switch(typeof(this.options.media)) {\n                            case 'number':\n                                if (window.innerWidth < this.options.media) {\n                                    return false;\n                                }\n                                break;\n                            case 'string':\n                                if (window.matchMedia && !window.matchMedia(this.options.media).matches) {\n                                    return false;\n                                }\n                                break;\n                        }\n                    }\n\n                    var scrollTop      = $win.scrollTop(),\n                        documentHeight = $doc.height(),\n                        dwh            = documentHeight - $win.height(),\n                        extra          = (scrollTop > dwh) ? dwh - scrollTop : 0,\n                        elementTop     = this.wrapper.offset().top,\n                        etse           = elementTop - this.options.top - extra;\n\n                    return (scrollTop  >= etse);\n                }\n            };\n\n            sticked.push(this.sticky);\n        },\n\n        update: function() {\n            scroller();\n        }\n    });\n\n    function scroller() {\n\n        if (!sticked.length) return;\n\n        var scrollTop       = $win.scrollTop(),\n            documentHeight  = $doc.height(),\n            dwh             = documentHeight - $win.height(),\n            extra           = (scrollTop > dwh) ? dwh - scrollTop : 0,\n            cls, newTop;\n\n        if(scrollTop < 0) return;\n\n\n        for (var i = 0; i < sticked.length; i++) {\n\n            if (!sticked[i].element.is(\":visible\") || sticked[i].animate) {\n                continue;\n            }\n\n            var sticky = sticked[i];\n\n            if (!sticky.check()) {\n\n                if (sticky.currentTop !== null) {\n                    sticky.reset();\n                }\n\n            } else {\n\n                if (sticky.options.top < 0) {\n                    newTop = 0;\n                } else {\n                    newTop = documentHeight - sticky.element.outerHeight() - sticky.options.top - sticky.options.bottom - scrollTop - extra;\n                    newTop = newTop < 0 ? newTop + sticky.options.top : sticky.options.top;\n                }\n\n                if (sticky.currentTop != newTop) {\n\n                    sticky.element.css({\n                        \"position\" : \"fixed\",\n                        \"top\"      : newTop,\n                        \"width\"    : (typeof sticky.getWidthFrom !== 'undefined') ? $(sticky.getWidthFrom).width() : sticky.element.width(),\n                        \"left\"     : sticky.wrapper.offset().left\n                    });\n\n                    if (!sticky.init) {\n\n                        sticky.element.addClass(sticky.options.clsinit);\n\n                        if (location.hash && scrollTop > 0 && sticky.options.target) {\n\n                            var $target = $(location.hash);\n\n                            if ($target.length) {\n\n                                setTimeout((function($target, sticky){\n\n                                    return function() {\n\n                                        sticky.element.width(); // force redraw\n\n                                        var offset       = $target.offset(),\n                                            maxoffset    = offset.top + $target.outerHeight(),\n                                            stickyOffset = sticky.element.offset(),\n                                            stickyHeight = sticky.element.outerHeight(),\n                                            stickyMaxOffset = stickyOffset.top + stickyHeight;\n\n                                        if (stickyOffset.top < maxoffset && offset.top < stickyMaxOffset) {\n                                            scrollTop = offset.top - stickyHeight - sticky.options.target;\n                                            window.scrollTo(0, scrollTop);\n                                        }\n                                    };\n\n                                })($target, sticky), 0);\n                            }\n                        }\n                    }\n\n                    sticky.element.addClass(sticky.options.clsactive);\n                    sticky.element.css('margin', '');\n\n                    if (sticky.options.animation && sticky.init) {\n                        sticky.element.addClass(sticky.options.animation);\n                    }\n\n                    sticky.currentTop = newTop;\n                }\n            }\n\n            sticky.init = true;\n        }\n\n    }\n\n    // should be more efficient than using $win.scroll(scroller):\n    $doc.on('uk-scroll', scroller);\n    $win.on('resize orientationchange', UI.Utils.debounce(function() {\n\n        if (!sticked.length) return;\n\n        for (var i = 0; i < sticked.length; i++) {\n            sticked[i].reset(true);\n        }\n\n        scroller();\n    }, 100));\n\n    // init code\n    UI.ready(function(context) {\n\n        setTimeout(function(){\n\n            $(\"[data-uk-sticky]\", context).each(function(){\n\n                var $ele = $(this);\n\n                if(!$ele.data(\"sticky\")) {\n                    UI.sticky($ele, UI.Utils.options($ele.attr('data-uk-sticky')));\n                }\n            });\n\n            scroller();\n        }, 0);\n    });\n\n    return $.fn.uksticky;\n});"],"sourceRoot":"/source/"}