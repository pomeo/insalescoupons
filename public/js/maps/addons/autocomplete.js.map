{"version":3,"sources":["addons/autocomplete.js"],"names":["addon","component","jQuery","UIkit","define","amd","$","UI","defaults","minLength","param","method","delay","loadingClass","flipDropdown","skipClass","hoverClass","source","renderer","template","visible","value","selected","init","$this","this","select","trigger","Utils","debounce","handle","options","dropdown","find","html","input","attr","length","appendTo","element","addClass","on","keydown","e","which","shiftKey","preventDefault","pick","hide","keyup","blur","setTimeout","triggercomplete","old","val","request","item","scrollinview","items","children","hasClass","index","eq","removeClass","top","position","scrollTop","dpheight","height","data","show","release","render","apply","forEach","toLowerCase","indexOf","push","params","ajax","url","type","dataType","done","json","empty","append","$doc","ele","autocomplete"],"mappings":"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","file":"addons/autocomplete.js","sourcesContent":["/*! UIkit 2.9.0 | http://www.getuikit.com | (c) 2014 YOOtheme | MIT License */\n\n(function(addon) {\n\n    var component;\n\n    if (jQuery && jQuery.UIkit) {\n        component = addon(jQuery, jQuery.UIkit);\n    }\n\n    if (typeof define == \"function\" && define.amd) {\n        define(\"uikit-autocomplete\", [\"uikit\"], function(){\n            return component || addon(jQuery, jQuery.UIkit);\n        });\n    }\n\n})(function($, UI){\n\n    UI.component('autocomplete', {\n\n        defaults: {\n            minLength: 3,\n            param: 'search',\n            method: 'post',\n            delay: 300,\n            loadingClass: 'uk-loading',\n            flipDropdown: false,\n            skipClass: 'uk-skip',\n            hoverClass: 'uk-active',\n            source: null,\n            renderer: null,\n\n            // template\n\n            template: '<ul class=\"uk-nav uk-nav-autocomplete uk-autocomplete-results\">{{~items}}<li data-value=\"{{$item.value}}\"><a>{{$item.value}}</a></li>{{/items}}</ul>'\n        },\n\n        visible  : false,\n        value    : null,\n        selected : null,\n\n        init: function() {\n\n            var $this   = this,\n                select  = false,\n                trigger = UI.Utils.debounce(function(e) {\n                    if(select) {\n                        return (select = false);\n                    }\n                    $this.handle();\n                }, this.options.delay);\n\n\n            this.dropdown = this.find('.uk-dropdown');\n            this.template = this.find('script[type=\"text/autocomplete\"]').html();\n            this.template = UI.Utils.template(this.template || this.options.template);\n            this.input    = this.find(\"input:first\").attr(\"autocomplete\", \"off\");\n\n            if (!this.dropdown.length) {\n               this.dropdown = $('<div class=\"uk-dropdown\"></div>').appendTo(this.element);\n            }\n\n            if (this.options.flipDropdown) {\n                this.dropdown.addClass('uk-dropdown-flip');\n            }\n\n            this.input.on({\n                \"keydown\": function(e) {\n\n                    if (e && e.which && !e.shiftKey) {\n\n                        switch (e.which) {\n                            case 13: // enter\n                                select = true;\n\n                                if ($this.selected) {\n                                    e.preventDefault();\n                                    $this.select();\n                                }\n                                break;\n                            case 38: // up\n                                e.preventDefault();\n                                $this.pick('prev', true);\n                                break;\n                            case 40: // down\n                                e.preventDefault();\n                                $this.pick('next', true);\n                                break;\n                            case 27:\n                            case 9: // esc, tab\n                                $this.hide();\n                                break;\n                            default:\n                                break;\n                        }\n                    }\n\n                },\n                \"keyup\": trigger,\n                \"blur\": function(e) {\n                    setTimeout(function() { $this.hide(); }, 200);\n                }\n            });\n\n            this.dropdown.on(\"click\", \".uk-autocomplete-results > *\", function(){\n                $this.select();\n            });\n\n            this.dropdown.on(\"mouseover\", \".uk-autocomplete-results > *\", function(){\n                $this.pick($(this));\n            });\n\n            this.triggercomplete = trigger;\n        },\n\n        handle: function() {\n\n            var $this = this, old = this.value;\n\n            this.value = this.input.val();\n\n            if (this.value.length < this.options.minLength) return this.hide();\n\n            if (this.value != old) {\n                $this.request();\n            }\n\n            return this;\n        },\n\n        pick: function(item, scrollinview) {\n\n            var $this    = this,\n                items    = this.dropdown.find('.uk-autocomplete-results').children(':not(.'+this.options.skipClass+')'),\n                selected = false;\n\n            if (typeof item !== \"string\" && !item.hasClass(this.options.skipClass)) {\n                selected = item;\n            } else if (item == 'next' || item == 'prev') {\n\n                if (this.selected) {\n                    var index = items.index(this.selected);\n\n                    if (item == 'next') {\n                        selected = items.eq(index + 1 < items.length ? index + 1 : 0);\n                    } else {\n                        selected = items.eq(index - 1 < 0 ? items.length - 1 : index - 1);\n                    }\n\n                } else {\n                    selected = items[(item == 'next') ? 'first' : 'last']();\n                }\n            }\n\n            if (selected && selected.length) {\n                this.selected = selected;\n                items.removeClass(this.options.hoverClass);\n                this.selected.addClass(this.options.hoverClass);\n\n                // jump to selected if not in view\n                if (scrollinview) {\n\n                    var top       = selected.position().top,\n                        scrollTop = $this.dropdown.scrollTop(),\n                        dpheight  = $this.dropdown.height();\n\n                    if (top > dpheight ||  top < 0) {\n                        $this.dropdown.scrollTop(scrollTop + top);\n                    }\n                }\n            }\n        },\n\n        select: function() {\n\n            if(!this.selected) return;\n\n            var data = this.selected.data();\n\n            this.trigger(\"autocomplete-select\", [data, this]);\n\n            if (data.value) {\n                this.input.val(data.value);\n            }\n\n            this.hide();\n        },\n\n        show: function() {\n            if (this.visible) return;\n            this.visible = true;\n            this.element.addClass(\"uk-open\");\n            return this;\n        },\n\n        hide: function() {\n            if (!this.visible) return;\n            this.visible = false;\n            this.element.removeClass(\"uk-open\");\n            return this;\n        },\n\n        request: function() {\n\n            var $this   = this,\n                release = function(data) {\n\n                    if(data) {\n                        $this.render(data);\n                    }\n\n                    $this.element.removeClass($this.options.loadingClass);\n                };\n\n            this.element.addClass(this.options.loadingClass);\n\n            if (this.options.source) {\n\n                var source = this.options.source;\n\n                switch(typeof(this.options.source)) {\n                    case 'function':\n\n                        this.options.source.apply(this, [release]);\n\n                        break;\n\n                    case 'object':\n\n                        if(source.length) {\n\n                            var items = [];\n\n                            source.forEach(function(item){\n                                if(item.value && item.value.toLowerCase().indexOf($this.value.toLowerCase())!=-1) {\n                                    items.push(item);\n                                }\n                            });\n\n                            release(items);\n                        }\n\n                        break;\n\n                    case 'string':\n\n                        var params ={};\n\n                        params[this.options.param] = this.value;\n\n                        $.ajax({\n                            url: this.options.source,\n                            data: params,\n                            type: this.options.method,\n                            dataType: 'json'\n                        }).done(function(json) {\n                            release(json || []);\n                        });\n\n                        break;\n\n                    default:\n                        release(null);\n                }\n\n            } else {\n                this.element.removeClass($this.options.loadingClass);\n            }\n        },\n\n        render: function(data) {\n\n            var $this = this;\n\n            this.dropdown.empty();\n\n            this.selected = false;\n\n            if (this.options.renderer) {\n\n                this.options.renderer.apply(this, [data]);\n\n            } else if(data && data.length) {\n\n                this.dropdown.append(this.template({\"items\":data}));\n                this.show();\n\n                this.trigger('autocomplete-show');\n            }\n\n            return this;\n        }\n    });\n\n    // init code\n    UI.$doc.on(\"focus.autocomplete.uikit\", \"[data-uk-autocomplete]\", function(e) {\n\n        var ele = $(this);\n        if (!ele.data(\"autocomplete\")) {\n            var obj = UI.autocomplete(ele, UI.Utils.options(ele.attr(\"data-uk-autocomplete\")));\n        }\n    });\n\n    return UI.autocomplete;\n});"],"sourceRoot":"/source/"}