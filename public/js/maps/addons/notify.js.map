{"version":3,"sources":["addons/notify.js"],"names":["addon","component","jQuery","UIkit","define","amd","$","UI","containers","messages","notify","options","type","message","arguments","extend","status","Message","show","closeAll","group","instantly","id","close","this","defaults","uuid","Date","getTime","Math","ceil","random","element","join","data","addClass","currentstatus","pos","appendTo","on","prototype","timout","is","$this","prepend","marginbottom","parseInt","css","opacity","margin-top","outerHeight","margin-bottom","animate","timeout","closefn","setTimeout","hover","clearTimeout","finalize","remove","children","length","hide","onClose","apply","content","html","container","find","removeClass"],"mappings":"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","file":"addons/notify.js","sourcesContent":["/*! UIkit 2.9.0 | http://www.getuikit.com | (c) 2014 YOOtheme | MIT License */\n\n(function(addon) {\n\n    var component;\n\n    if (jQuery && jQuery.UIkit) {\n        component = addon(jQuery, jQuery.UIkit);\n    }\n\n    if (typeof define == \"function\" && define.amd) {\n        define(\"uikit-notify\", [\"uikit\"], function(){\n            return component || addon(jQuery, jQuery.UIkit);\n        });\n    }\n\n})(function($, UI){\n\n    var containers = {},\n        messages   = {},\n\n        notify     =  function(options){\n\n            if ($.type(options) == 'string') {\n                options = { message: options };\n            }\n\n            if (arguments[1]) {\n                options = $.extend(options, $.type(arguments[1]) == 'string' ? {status:arguments[1]} : arguments[1]);\n            }\n\n            return (new Message(options)).show();\n        },\n        closeAll  = function(group, instantly){\n            if(group) {\n                for(var id in messages) { if(group===messages[id].group) messages[id].close(instantly); }\n            } else {\n                for(var id in messages) { messages[id].close(instantly); }\n            }\n        };\n\n    var Message = function(options){\n\n        var $this = this;\n\n        this.options = $.extend({}, Message.defaults, options);\n\n        this.uuid    = \"ID\"+(new Date().getTime())+\"RAND\"+(Math.ceil(Math.random() * 100000));\n        this.element = $([\n\n            '<div class=\"uk-notify-message\">',\n                '<a class=\"uk-close\"></a>',\n                '<div>'+this.options.message+'</div>',\n            '</div>'\n\n        ].join('')).data(\"notifyMessage\", this);\n\n        // status\n        if (this.options.status) {\n            this.element.addClass('uk-notify-message-'+this.options.status);\n            this.currentstatus = this.options.status;\n        }\n\n        this.group = this.options.group;\n\n        messages[this.uuid] = this;\n\n        if(!containers[this.options.pos]) {\n            containers[this.options.pos] = $('<div class=\"uk-notify uk-notify-'+this.options.pos+'\"></div>').appendTo('body').on(\"click\", \".uk-notify-message\", function(){\n                $(this).data(\"notifyMessage\").close();\n            });\n        }\n    };\n\n\n    $.extend(Message.prototype, {\n\n        uuid: false,\n        element: false,\n        timout: false,\n        currentstatus: \"\",\n        group: false,\n\n        show: function() {\n\n            if (this.element.is(\":visible\")) return;\n\n            var $this = this;\n\n            containers[this.options.pos].show().prepend(this.element);\n\n            var marginbottom = parseInt(this.element.css(\"margin-bottom\"), 10);\n\n            this.element.css({\"opacity\":0, \"margin-top\": -1*this.element.outerHeight(), \"margin-bottom\":0}).animate({\"opacity\":1, \"margin-top\": 0, \"margin-bottom\":marginbottom}, function(){\n\n                if ($this.options.timeout) {\n\n                    var closefn = function(){ $this.close(); };\n\n                    $this.timeout = setTimeout(closefn, $this.options.timeout);\n\n                    $this.element.hover(\n                        function() { clearTimeout($this.timeout); },\n                        function() { $this.timeout = setTimeout(closefn, $this.options.timeout);  }\n                    );\n                }\n\n            });\n\n            return this;\n        },\n\n        close: function(instantly) {\n\n            var $this    = this,\n                finalize = function(){\n                    $this.element.remove();\n\n                    if(!containers[$this.options.pos].children().length) {\n                        containers[$this.options.pos].hide();\n                    }\n\n                    $this.options.onClose.apply($this, []);\n\n                    delete messages[$this.uuid];\n                };\n\n            if(this.timeout) clearTimeout(this.timeout);\n\n            if(instantly) {\n                finalize();\n            } else {\n                this.element.animate({\"opacity\":0, \"margin-top\": -1* this.element.outerHeight(), \"margin-bottom\":0}, function(){\n                    finalize();\n                });\n            }\n        },\n\n        content: function(html){\n\n            var container = this.element.find(\">div\");\n\n            if(!html) {\n                return container.html();\n            }\n\n            container.html(html);\n\n            return this;\n        },\n\n        status: function(status) {\n\n            if(!status) {\n                return this.currentstatus;\n            }\n\n            this.element.removeClass('uk-notify-message-'+this.currentstatus).addClass('uk-notify-message-'+status);\n\n            this.currentstatus = status;\n\n            return this;\n        }\n    });\n\n    Message.defaults = {\n        message: \"\",\n        status: \"\",\n        timeout: 5000,\n        group: null,\n        pos: 'top-center',\n        onClose: function() {}\n    };\n\n    UI.notify          = notify;\n    UI.notify.message  = Message;\n    UI.notify.closeAll = closeAll;\n\n    return notify;\n});"],"sourceRoot":"/source/"}