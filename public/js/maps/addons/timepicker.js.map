{"version":3,"sources":["addons/timepicker.js"],"names":["addon","component","jQuery","UIkit","define","amd","$","UI","times","12h","24h","i","h","push","value","String","defaults","format","delay","init","$this","this","options","minLength","template","source","release","element","wrap","autocomplete","parent","dropdown","addClass","on","selected","find","input","val","setTimeout","pick","Math","random","triggercomplete","checkTime","data","arr","timeArray","hour","minute","meridian","time","split","parseInt","isNaN","formatTime","$doc","ele","obj","timepicker","Utils","attr","focus"],"mappings":"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","file":"addons/timepicker.js","sourcesContent":["/*! UIkit 2.9.0 | http://www.getuikit.com | (c) 2014 YOOtheme | MIT License */\n\n(function(addon) {\n\n    var component;\n\n    if (jQuery && jQuery.UIkit) {\n        component = addon(jQuery, jQuery.UIkit);\n    }\n\n    if (typeof define == \"function\" && define.amd) {\n        define(\"uikit-search\", [\"uikit\"], function(){\n            return component || addon(jQuery, jQuery.UIkit);\n        });\n    }\n\n})(function($, UI){\n\n    \"use strict\";\n\n    var times = {'12h':[], '24h':[]};\n\n    for(var i = 0, h=''; i<24; i++) {\n\n        h = ''+i;\n\n        if(i<10)  h = '0'+h;\n\n        times['24h'].push({value: (h+':00')});\n        times['24h'].push({value: (h+':30')});\n\n        if (i<13) {\n            times['12h'].push({value: (h+':00 AM')});\n            times['12h'].push({value: (h+':30 AM')});\n        }\n\n        if (i > 12) {\n\n            h = h-12;\n\n            if (h < 10) h = '0'+String(h);\n\n            times['12h'].push({value: (h+':00 PM')});\n            times['12h'].push({value: (h+':30 PM')});\n        }\n    }\n\n\n    UI.component('timepicker', {\n\n        defaults: {\n            format : '24h',\n            delay  : 0\n        },\n\n        init: function() {\n\n            var $this  = this;\n\n            this.options.minLength = 0;\n            this.options.template  = '<ul class=\"uk-nav uk-nav-autocomplete uk-autocomplete-results\">{{~items}}<li data-value=\"{{$item.value}}\"><a>{{$item.value}}</a></li>{{/items}}</ul>';\n\n            this.options.source = function(release) {\n                release(times[$this.options.format] || times['12h']);\n            };\n\n            this.element.wrap('<div class=\"uk-autocomplete\"></div>');\n\n            this.autocomplete = UI.autocomplete(this.element.parent(), this.options);\n            this.autocomplete.dropdown.addClass('uk-dropdown-small uk-dropdown-scrollable');\n\n            this.autocomplete.on('autocomplete-show', function() {\n\n                var selected = $this.autocomplete.dropdown.find('[data-value=\"'+$this.autocomplete.input.val()+'\"]');\n\n                setTimeout(function(){\n                    $this.autocomplete.pick(selected, true);\n                }, 10);\n            });\n\n            this.autocomplete.input.on('focus', function(){\n\n                $this.autocomplete.value = Math.random();\n                $this.autocomplete.triggercomplete();\n\n            }).on('blur', function() {\n                $this.checkTime();\n            });\n\n            this.element.data(\"timepicker\", this);\n        },\n\n        checkTime: function() {\n\n            var arr, timeArray, meridian = 'AM', hour, minute, time = this.autocomplete.input.val();\n\n            if (this.options.format == '12h') {\n                arr = time.split(' ');\n                timeArray = arr[0].split(':');\n                meridian = arr[1];\n            } else {\n                timeArray = time.split(':');\n            }\n\n            hour   = parseInt(timeArray[0], 10);\n            minute = parseInt(timeArray[1], 10);\n\n            if (isNaN(hour))   hour = 0;\n            if (isNaN(minute)) minute = 0;\n\n            if (this.options.format == '12h') {\n                if (hour > 12) {\n                    hour = 12;\n                } else if (hour < 0) {\n                    hour = 12;\n                }\n\n                if (meridian === 'am' || meridian === 'a') {\n                    meridian = 'AM';\n                } else if (meridian === 'pm' || meridian === 'p') {\n                    meridian = 'PM';\n                }\n\n                if (meridian !== 'AM' && meridian !== 'PM') {\n                    meridian = 'AM';\n                }\n\n            } else {\n\n                if (hour >= 24) {\n                    hour = 23;\n                } else if (hour < 0) {\n                    hour = 0;\n                }\n            }\n\n            if (minute < 0) {\n                minute = 0;\n            } else if (minute >= 60) {\n                minute = 0;\n            }\n\n            this.autocomplete.input.val(this.formatTime(hour, minute, meridian));\n        },\n\n        formatTime: function(hour, minute, meridian) {\n            hour = hour < 10 ? '0' + hour : hour;\n            minute = minute < 10 ? '0' + minute : minute;\n            return hour + ':' + minute + (this.options.format == '12h' ? ' ' + meridian : '');\n        }\n    });\n\n    // init code\n    UI.$doc.on(\"focus.timepicker.uikit\", \"[data-uk-timepicker]\", function(e) {\n        var ele = $(this);\n\n        if (!ele.data(\"timepicker\")) {\n            var obj = UI.timepicker(ele, UI.Utils.options(ele.attr(\"data-uk-timepicker\")));\n\n            setTimeout(function(){\n                obj.autocomplete.input.focus();\n            }, 20);\n        }\n    });\n});\n"],"sourceRoot":"/source/"}